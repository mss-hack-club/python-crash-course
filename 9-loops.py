# LOOPS

# there are two types of loops in Python: while and for

# WHILE LOOP - executes a block of code WHILE a condition is true

# while condition:
#    do this

# Just like if statements and all of python, while loops look for INDENTATION to mark code blocks, not curly brackets in most other languages

# Example:

num = 1 # declare a new num variable w/ the value of 1

# while num less than 10 is True
while num < 10:
    print(num) # print the current value of num
    num += 1 # add one to num

# you can force a true condition (and make a forever loop) like this

# while True is True (it always is)
while True:
    print('this is true')

    # Normally forever loops are broken like this:
    # if some condition:
        # break (which stops a loop, any loop)

# FOR LOOP - executes a block of code FOR EACH element in an ITERABLE

# Iterable: ANY OBJECT that can be ITERATED THROUGH (gone through one by one)
# Examples of iterables: strings, lists, the object generated by range()
# NOT examples of iterables: integers (e.g. 333 is not an iterable because it's technically 300 + 30 + 3, you can't take apart the digits unless you turn it into a string)

# for loop with the RANGE function
# range() generates an ITERABLE with values in a specified range

# Range takes three values: range(start (inclusive), stop (non-inclusive), jump)
# e.g. range (3) generates an object with [0, 1, 2] in it (notice the only one argument)
# e.g. range(1, 3) generates an object with [1, 2] in it
# e.g. range(100, 1, -1) generates an object with [100, 99, ..., 1] in it

# you can use the range function with a for loop

# in the below loop, range(1, 3) generates an ITERABLE with the values [1, 2]
# the variable i (which we make in the for loop itself) will take the first value
# in the iterable, which is 1, and then the indented codeblock runs. Then, the
# variable i takes the second value, 2, and the codeblock runs again. So this 
# loop prints 1, then 2
for i in range(1, 3):
    print(i)

# for loops also work with other iterables like lists

a = [1, 2, 3]

# this time each value of i is an item in the list in order. So this loop
# prints 1, 2, then 3
for i in a:
    print(a)
